<!--*
*MIT License
*
*Copyright (c) 2022 S Christison
*
*Permission is hereby granted, free of charge, to any person obtaining a copy
*of this software and associated documentation files (the "Software"), to deal
*in the Software without restriction, including without limitation the rights
*to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*copies of the Software, and to permit persons to whom the Software is
*furnished to do so, subject to the following conditions:
*
*The above copyright notice and this permission notice shall be included in all
*copies or substantial portions of the Software.
*
*THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
*SOFTWARE.
*-->

<UserControl
    x:Class="BTNET.VM.Controls.TabControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:BTNET.BV.Converters"
    xmlns:xctk="clr-namespace:BTNET.Toolkit"
    Name="TabC">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:NumericFieldConverter x:Key="converter" />
        <BitmapImage x:Key="OrderSettings" UriSource="/BV/Resources/ordersettings.png" />
    </UserControl.Resources>
    <StackPanel
        Orientation="Horizontal"
        Margin="0,0,0,5">
        <TabControl
            Height="46"
            Background="Black"
            FontSize="12"
            Opacity="{Binding SettingsVM.Opacity}"
            SelectedIndex="{Binding MainVM.SelectedTabUI, Mode=TwoWay}"
            UseLayoutRounding="True">
            <TabControl.BorderBrush>
                <LinearGradientBrush Opacity="0.6" StartPoint="0,1" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0.4" Color="{DynamicResource BorderLightColor}" />
                            <GradientStop Offset="0.2" Color="{DynamicResource BorderDarkColor}" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </TabControl.BorderBrush>
            <TabItem Foreground="White" Header="Buy">
                <StackPanel Height="20" Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.BorrowLabelQuote, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="120"
                        IsEnabled="false"
                        Maximum="{Binding QuoteVM.PriceMax}"
                        Minimum="{Binding QuoteVM.PriceMin}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding QuoteVM.TradeAmountBuy}"
                        FormatString="{Binding QuoteVM.StringFormatQuotePriceTickSize}">
                    </xctk:DecimalUpDown>
                    <TextBlock
                        Margin="3,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.BorrowLabelBase, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="100"
                        Increment="{Binding QuoteVM.QuantityTickSize}"
                        TabIndex="0"
                        Maximum="{Binding QuoteVM.QuantityMax}"
                        Minimum="{Binding QuoteVM.QuantityMin}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding QuoteVM.ObserveQuoteOrderQuantityLocalBuy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </xctk:DecimalUpDown>
                    <TextBlock
                        Margin="3,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.SymbolName, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="100"
                        DefaultValue="0"
                        Increment="{Binding QuoteVM.PriceTickSize}"
                        IsEnabled="{Binding TradeVM.UseLimitBuyBool, Mode=OneWay}"
                        Maximum="{Binding QuoteVM.PriceMax}"
                        Minimum="{Binding QuoteVM.PriceMin}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding TradeVM.SymbolPriceBuy}"
                        FormatString="{Binding QuoteVM.StringFormatPriceTickSize}"/>
                    <Button
                        Width="40"
                        Margin="2,1,1,1"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding TradeVM.BuyCommand}"
                        Content="BUY"
                        IsEnabled="{Binding MainVM.BuyButtonEnabled}" />
                    <Button
                        Width="18"
                        Height="18"
                        Margin="2,0,0,0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Style="{StaticResource DefaultButton}"
                        Command="{Binding VisibilityVM.OrderSettingsCommand}"
                        IsEnabled="{Binding MainVM.SellButtonEnabled}">
                        <Image Source="{StaticResource OrderSettings}" />
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.Target="{Binding ElementName=orderSettings}"
                                        Storyboard.TargetProperty="Width"
                                        From="{Binding VisibilityVM.OrderSettingsWidthFrom}"
                                        To="{Binding VisibilityVM.OrderSettingsWidthTo, UpdateSourceTrigger=PropertyChanged}"
                                        Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>
            </TabItem>
            <TabItem
                Margin="0"
                Foreground="White"
                Header="Sell">
                <StackPanel
                    Height="20"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.BorrowLabelQuote, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="120"
                        IsEnabled="false"
                        Maximum="{Binding QuoteVM.PriceMax}"
                        Minimum="{Binding QuoteVM.PriceMin}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding QuoteVM.TradeAmountSell, Mode=TwoWay}"
                        FormatString="{Binding QuoteVM.StringFormatQuotePriceTickSize}">
                    </xctk:DecimalUpDown>
                    <TextBlock
                        Margin="3,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.BorrowLabelBase, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="100"
                        Increment="{Binding QuoteVM.QuantityTickSize}"
                        Maximum="{Binding QuoteVM.QuantityMax}"
                        Minimum="{Binding QuoteVM.QuantityMin}"
                        TabIndex="0"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding QuoteVM.ObserveQuoteOrderQuantityLocalSell, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </xctk:DecimalUpDown>
                    <TextBlock
                        Margin="3,0,3,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="White"
                        Text="{Binding BorrowVM.SymbolName, FallbackValue=Loading}"
                        TextAlignment="Center" />
                    <xctk:DecimalUpDown
                        Width="100"
                        DefaultValue="0"
                        Increment="{Binding QuoteVM.PriceTickSize}"
                        IsEnabled="{Binding TradeVM.UseLimitSellBool}"
                        Maximum="{Binding QuoteVM.PriceMax}"
                        Minimum="{Binding QuoteVM.PriceMin}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        Value="{Binding TradeVM.SymbolPriceSell}" 
                        FormatString="{Binding QuoteVM.StringFormatPriceTickSize}"/>
                    <Button
                        Width="40"
                        Margin="2,1,1,1"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding TradeVM.SellCommand}"
                        Content="SELL"
                        IsEnabled="{Binding MainVM.SellButtonEnabled}" />
                    <Button
                        Width="18"
                        Height="18"
                        Margin="2,0,0,0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Style="{StaticResource DefaultButton}"
                        Command="{Binding VisibilityVM.OrderSettingsCommand}"
                        IsEnabled="{Binding MainVM.SellButtonEnabled}">
                        <Image Source="{StaticResource OrderSettings}" />
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.Target="{Binding ElementName=orderSettings}"
                                        Storyboard.TargetProperty="Width"
                                        From="{Binding VisibilityVM.OrderSettingsWidthFrom}"
                                        To="{Binding VisibilityVM.OrderSettingsWidthTo, UpdateSourceTrigger=PropertyChanged}"
                                        Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </StackPanel>
            </TabItem>
            <TabItem
                Foreground="White"
                Header="Settle"
                IsSelected="True"
                Visibility="{Binding VisibilityVM.HideSettleTab, Converter={StaticResource BoolToVis}}">
                <StackPanel
                    Height="18"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Padding="4,0,4,0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding SettleVM.SettleQuoteCommand}"
                        Content="{Binding BorrowVM.BorrowLabelQuote, FallbackValue=Error}"
                        IsEnabled="{Binding SettleVM.CanRepayQuote}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        ToolTip="Settle the Max Free amount of the Quote Asset" />
                    <Button
                        Margin="2,0,2,0"
                        Padding="4,0,4,0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding SettleVM.SettleBaseCommand}"
                        Content="{Binding BorrowVM.BorrowLabelBase, FallbackValue=Loading}"
                        IsEnabled="{Binding SettleVM.CanRepayBase}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        ToolTip="Settle the Max Free amount of the Base Asset" />
                    <Button
                        Padding="4,0,4,0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding SettleVM.SettleAllCommand}"
                        Content="{Binding CurrentlySelectedSymbol.SymbolView.Symbol, FallbackValue=Error}"
                        IsEnabled="{Binding SettleVM.CanRepayAll}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        ToolTip="Settle the Max Free amount of Both Symbol Assets (Base and Quote)" />
                </StackPanel>
            </TabItem>
        </TabControl>
        <StackPanel Height="52" Margin="0,20,0,0"></StackPanel>
        <StackPanel
            Visibility="{Binding VisibilityVM.OrderSettingsVisibility, Converter={StaticResource BoolToVis}, UpdateSourceTrigger=PropertyChanged}"
            Margin="5,20,0,0"
            VerticalAlignment="Center"
            Opacity="{Binding SettingsVM.Opacity}">
            <Border
                Background="Black"
                Width="0"
                CornerRadius="3"
                BorderThickness="1"
                Padding="2"
                x:Name="orderSettings"
                BorderBrush="{StaticResource MenuPopupBrushChrome}">
                <StackPanel>
                    <CheckBox
                        Margin="1,0,0,0"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        Foreground="AntiqueWhite"
                        Command="{Binding BorrowVM.BorrowToggleCommand}"
                        Content="Borrow"
                        IsChecked="{Binding BorrowVM.BorrowCheckboxToggle, Mode=OneWay}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        ToolTip="Tick to Borrow funds where available" />
                    <CheckBox
                        Margin="1,0,0,0"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        Foreground="AntiqueWhite"
                        Command="{Binding TradeVM.UseLimitToggleCommand}"
                        Content="Limit"
                        IsChecked="{Binding TradeVM.UseLimitCheckboxToggle, Mode=OneWay}"
                        Opacity="{Binding SettingsVM.Opacity}"
                        ToolTip="Tick to place Limit Sell Orders instead of Market Orders &#x0a;(Use Price you Choose and Exact Quantity)" />
                </StackPanel>
            </Border>
        </StackPanel>
    </StackPanel>
</UserControl>
